{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/honey/Documents/Resume builder/components/forms/EditSingleExperience.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Divider, TextField } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Formik } from 'formik';\nimport React, { Fragment, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { editSingleExperienceData } from '../../redux/actions/resumeActions';\n\nconst EditSingleExperience = ({\n  closeDrawer,\n  anchor,\n  experience: experienceProp,\n  setEdit\n}) => {\n  const experience = experienceProp ? experienceProp : {\n    designation: '',\n    company: '',\n    description: '',\n    start: undefined,\n    end: undefined,\n    years: '',\n    country: ''\n  }; // Dispatch\n\n  const dispatch = useDispatch(); // Validation Schema for PersonalData form\n\n  const ValidationSchema = Yup.object().shape({\n    designation: Yup.string().required(\"Designation is required\"),\n    company: Yup.string().required('Please enter the company name'),\n    years: Yup.string().min(1, 'Minimum 1 character in needed').max(2, 'Maximum 2 character Allowed').required('Please enter years of experience'),\n    start: Yup.date().required(\"Please enter start date\"),\n    country: Yup.string().required('Please enter country name'),\n    end: Yup.date().required(\"Please enter end date\")\n  });\n  /* \n                  {\n                      designation: '',\n                      company: '',\n                      description: '',\n                      start: undefined,\n                      end: undefined,\n                      years: '',\n                      country: '',\n                  },\n              \n  */\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: _objectSpread({}, experience),\n    validateOnChange: false,\n    validateOnBlur: false,\n    validateOnMount: false,\n    validationSchema: ValidationSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        dispatch(editSingleExperienceData(values));\n        resetForm({\n          id: '',\n          designation: '',\n          company: '',\n          description: '',\n          start: undefined,\n          end: undefined,\n          years: '',\n          country: ''\n        });\n        setSubmitting(false);\n        closeDrawer(anchor, false);\n        setEdit(true);\n      }, 400);\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      setFieldValue,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"pb-10\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex align-center justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-t1-lg font-medium mt-6\",\n            children: \"Experience Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `designation`,\n          className: \"mt-6 pr-10\",\n          rows: 1,\n          variant: \"outlined\",\n          fullWidth: true,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: 'Enter Designation',\n          value: values.designation,\n          error: !!errors.designation,\n          helperText: errors.designation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `company`,\n          className: \"mt-10 pr-10\",\n          rows: 1,\n          variant: \"outlined\",\n          fullWidth: true,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: 'Enter Company',\n          value: values.company,\n          error: !!errors.company,\n          helperText: errors.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `description`,\n          className: \"mt-10 pr-10\",\n          rows: 3,\n          multiline: true,\n          variant: \"outlined\",\n          fullWidth: true,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: 'Enter Description',\n          value: values.description,\n          error: !!errors.description,\n          helperText: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `years`,\n          className: \"mt-10 pr-10\",\n          rows: 1,\n          variant: \"outlined\",\n          fullWidth: true,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: 'Enter Years of Experience',\n          value: values.years,\n          error: !!errors.years,\n          helperText: errors.years\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `country`,\n          className: \"mt-10 pr-10\",\n          rows: 1,\n          variant: \"outlined\",\n          fullWidth: true,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: 'Enter Country',\n          value: values.country,\n          error: !!errors.country,\n          helperText: errors.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between pr-10 mt-6 flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              className: \"w-full lg:w-auto\",\n              InputProps: {\n                readOnly: true\n              },\n              margin: \"normal\",\n              id: `start`,\n              label: \"Enter Start Date\",\n              views: [\"year\", \"month\"] // format='/MM/yyyy'\n              ,\n              onChange: date => {\n                const month = date.toLocaleString('default', {\n                  month: 'long'\n                });\n                const year = date.getUTCFullYear();\n                setFieldValue(`start`, `${month} ${year}`);\n              },\n              value: values.start,\n              error: !!errors.start,\n              helperText: errors.start,\n              KeyboardButtonProps: {\n                'aria-label': 'change date'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              className: \"w-full lg:w-auto\",\n              margin: \"normal\",\n              id: `end`,\n              InputProps: {\n                readOnly: true\n              },\n              label: \"Enter End Date\",\n              views: [\"year\", \"month\"] // format='MM/yyyy'\n              ,\n              onChange: date => {\n                const month = date.toLocaleString('default', {\n                  month: 'long'\n                });\n                const year = date.getUTCFullYear();\n                setFieldValue(`end`, `${month} ${year}`);\n              },\n              KeyboardButtonProps: {\n                'aria-label': 'change date'\n              },\n              value: values.end,\n              error: !!errors.end,\n              helperText: errors.end\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"mt-8 -ml-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-6\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nexport default EditSingleExperience;","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/components/forms/EditSingleExperience.js"],"names":["Button","Divider","TextField","DeleteIcon","Formik","React","Fragment","useEffect","useDispatch","Yup","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","editSingleExperienceData","EditSingleExperience","closeDrawer","anchor","experience","experienceProp","setEdit","designation","company","description","start","undefined","end","years","country","dispatch","ValidationSchema","object","shape","string","required","min","max","date","values","setSubmitting","resetForm","setTimeout","id","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","readOnly","month","toLocaleString","year","getUTCFullYear"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Divider,\n    TextField,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Formik } from 'formik';\nimport React, {Fragment, useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { editSingleExperienceData } from '../../redux/actions/resumeActions';\n\nconst EditSingleExperience = ({ closeDrawer, anchor, experience: experienceProp, setEdit }) => {\n    const experience = experienceProp ? experienceProp : {\n        designation: '',\n        company: '',\n        description: '',\n        start: undefined,\n        end: undefined,\n        years: '',\n        country: '',\n    };\n\n    // Dispatch\n    const dispatch = useDispatch();\n\n    // Validation Schema for PersonalData form\n    const ValidationSchema =  Yup.object().shape({\n        designation: Yup.string().required(\"Designation is required\"),\n        company: Yup.string().required('Please enter the company name'),\n        years: Yup.string().min(1, 'Minimum 1 character in needed').max(2, 'Maximum 2 character Allowed').required('Please enter years of experience'),\n        start: Yup.date().required(\"Please enter start date\"),\n        country: Yup.string().required('Please enter country name'),\n        end: Yup.date().required(\"Please enter end date\"),\n    })\n\n    /* \n                    {\n                        designation: '',\n                        company: '',\n                        description: '',\n                        start: undefined,\n                        end: undefined,\n                        years: '',\n                        country: '',\n                    },\n                \n    */\n\n    return (\n        <Formik\n            initialValues={{\n                ...experience\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validateOnMount={false}\n            validationSchema={ValidationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n                setTimeout(() => {\n                    dispatch(editSingleExperienceData(values));\n                    resetForm({\n                        id: '',\n                        designation: '',\n                        company: '',\n                        description: '',\n                        start: undefined,\n                        end: undefined,\n                        years: '',\n                        country: '',\n                    });\n                    setSubmitting(false);\n                    closeDrawer(anchor, false);\n                    setEdit(true)\n                }, 400);\n            }}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue,\n                isSubmitting,\n            }) => (\n                <form className='pb-10' onSubmit={handleSubmit}>\n                <div className=''>\n                    <div className=\"flex align-center justify-between\">\n                        <h3 className='text-t1-lg font-medium mt-6'>Experience Block</h3>\n                    </div>\n                    <TextField\n                        id={`designation`}\n                        className='mt-6 pr-10'\n                        rows={1}\n                        variant='outlined'\n                        fullWidth\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        label={'Enter Designation'}\n                        value={values.designation}\n                        error={!!errors.designation}\n                        helperText={errors.designation}\n                    />\n\n                    <TextField\n                        id={`company`}\n                        className='mt-10 pr-10'\n                        rows={1}\n                        variant='outlined'\n                        fullWidth\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        label={'Enter Company'}\n                        value={values.company}\n                        error={!!errors.company}\n                        helperText={errors.company}\n                    />\n\n                    <TextField\n                        id={`description`}\n                        className='mt-10 pr-10'\n                        rows={3}\n                        multiline\n                        variant='outlined'\n                        fullWidth\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        label={'Enter Description'}\n                        value={values.description}\n                        error={!!errors.description}\n                        helperText={errors.description}\n                    />\n\n                    <TextField\n                        id={`years`}\n                        className='mt-10 pr-10'\n                        rows={1}\n                        variant='outlined'\n                        fullWidth\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        label={'Enter Years of Experience'}\n                        value={values.years}\n                        error={!!errors.years}\n                        helperText={errors.years}\n                    />\n\n\n                    <TextField\n                        id={`country`}\n                        className='mt-10 pr-10'\n                        rows={1}\n                        variant='outlined'\n                        fullWidth\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        label={'Enter Country'}\n                        value={values.country}\n                        error={!!errors.country}\n                        helperText={errors.country}\n                    />\n\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <div className='flex justify-between pr-10 mt-6 flex-wrap'>\n                            <KeyboardDatePicker\n                                className='w-full lg:w-auto'\n                                InputProps={{readOnly: true}}\n                                margin='normal'\n                                id={`start`}\n                                label='Enter Start Date'\n                                views={[\"year\", \"month\"]}\n                                // format='/MM/yyyy'\n                                onChange={(date) => {\n                                    const month = date.toLocaleString('default', { month: 'long' });\n                                    const year = date.getUTCFullYear();\n                                    setFieldValue(`start`, `${month} ${year}`);\n                                }}\n                                value={values.start}\n                                error={!!errors.start}\n                                helperText={errors.start}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                            <KeyboardDatePicker\n                                className='w-full lg:w-auto'\n                                margin='normal'\n                                id={`end`}\n                                InputProps={{readOnly: true}}\n                                label='Enter End Date'\n                                views={[\"year\", \"month\"]}\n                                // format='MM/yyyy'\n                                onChange={(date) => {\n                                    const month = date.toLocaleString('default', { month: 'long' });\n                                    const year = date.getUTCFullYear();\n                                    setFieldValue(`end`, `${month} ${year}`);\n                                }}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                                value={values.end}\n                                error={!!errors.end}\n                                helperText={errors.end}\n                            />\n                        </div>\n                    </MuiPickersUtilsProvider>\n                </div>\n                <Divider className='mt-8 -ml-10' />\n                    <Button\n                        className='mt-6'\n                        variant='contained'\n                        color='primary'\n                        type='submit'\n                        disabled={isSubmitting}\n                    >\n                        Submit\n\t\t\t\t\t</Button>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default EditSingleExperience;\n"]},"metadata":{},"sourceType":"module"}