{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/honey/Documents/Resume builder/pages/_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport Document, { Html, Main, NextScript, Head } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nexport default class MyDocument extends Document {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"keywords\",\n          content: \"Keywords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"manifest\",\n          href: \"/manifest.json\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"theme-color\",\n          content: \"#1abc9c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"msapplication-navbutton-color\",\n          content: \"#1abc9c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"apple-mobile-web-app-status-bar-style\",\n          content: \"#1abc9c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this);\n  }\n\n} // `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\n\nMyDocument.getInitialProps = async ctx => {\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 51\n    }, this))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/pages/_document.js"],"names":["React","Document","Html","Main","NextScript","Head","ServerStyleSheets","MyDocument","render","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA2CC,IAA3C,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAChDO,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACC,QAAC,IAAD;AAAA,gCACC;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAM,UAAA,IAAI,EAAC,UAAX;AAAsB,UAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFD,eAIC;AAAM,UAAA,GAAG,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBALD,eASC;AAAM,UAAA,IAAI,EAAC,+BAAX;AAA2C,UAAA,OAAO,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBATD,eAWC;AAAM,UAAA,IAAI,EAAC,uCAAX;AAAmD,UAAA,OAAO,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAcC;AAAA,gCACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAqBA;;AAvB+C,C,CA0BjD;AACA;;AACAD,UAAU,CAACE,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC3C;AACA,QAAMC,MAAM,GAAG,IAAIL,iBAAJ,EAAf;AACA,QAAMM,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MAChBD,kBAAkB,CAAC;AAClBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,eAAe,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,YAAf;AADd,GAAD,CADnB;;AAKA,QAAME,YAAY,GAAG,MAAMjB,QAAQ,CAACQ,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,yCACIQ,YADJ;AAEC;AACAC,IAAAA,MAAM,EAAE,CACP,GAAGnB,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CADI,EAEPR,MAAM,CAACW,eAAP,EAFO;AAHT;AAQA,CApBD","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport Document, { Html, Main, NextScript, Head } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\n\nexport default class MyDocument extends Document {\n\trender() {\n\t\treturn (\n\t\t\t<Html lang='en'>\n\t\t\t\t<Head>\n\t\t\t\t\t<meta name='description' content='Description' />\n\t\t\t\t\t<meta name='keywords' content='Keywords' />\n\n\t\t\t\t\t<link rel='manifest' href='/manifest.json' />\n\t\t\t\t\t<meta name='theme-color' content='#1abc9c' />\n\t\t\t\t\t{/* <!-- Chrome, Firefox OS and Opera --> */}\n\t\t\t\t\t{/* <meta name=\"theme-color\" content=\"#4285f4\" /> */}\n\t\t\t\t\t{/* <!-- Windows Phone --> */}\n\t\t\t\t\t<meta name=\"msapplication-navbutton-color\" content=\"#1abc9c\" />\n\t\t\t\t\t{/* <!-- iOS Safari --> */}\n\t\t\t\t\t<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"#1abc9c\" />\n\t\t\t\t</Head>\n\t\t\t\t<body>\n\t\t\t\t\t<Main />\n\t\t\t\t\t<NextScript />\n\t\t\t\t</body>\n\t\t\t</Html>\n\t\t);\n\t}\n}\n\n// `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\nMyDocument.getInitialProps = async (ctx) => {\n\t// Render app and page and get the context of the page with collected side effects.\n\tconst sheets = new ServerStyleSheets();\n\tconst originalRenderPage = ctx.renderPage;\n\n\tctx.renderPage = () =>\n\t\toriginalRenderPage({\n\t\t\tenhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n\t\t});\n\n\tconst initialProps = await Document.getInitialProps(ctx);\n\n\treturn {\n\t\t...initialProps,\n\t\t// Styles fragment is rendered after the app and page rendering finish.\n\t\tstyles: [\n\t\t\t...React.Children.toArray(initialProps.styles),\n\t\t\tsheets.getStyleElement(),\n\t\t],\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}