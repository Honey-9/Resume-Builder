{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/honey/Documents/Resume builder/components/forms/ExtrasForm.js\";\nimport { Button, Divider, FormControl, FormHelperText, InputLabel, makeStyles, MenuItem, Select, TextField } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { FieldArray, Formik } from 'formik';\nimport ChipInput from 'material-ui-chip-input';\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { addExtrasData } from '../../redux/actions/resumeActions';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst ExtrasForm = ({\n  closeDrawer,\n  anchor\n}) => {\n  const classes = useStyles(); // Dispatch\n\n  const dispatch = useDispatch(); // Get personalData State from globalState\n\n  let extras = useSelector(state => state.resume.data.extras); // Validation Schema for Extras form\n\n  const ValidationSchema = Yup.object().shape({\n    extras: Yup.array().of(Yup.object().shape({\n      title: Yup.string().required('Title of the Extra is must.'),\n      type: Yup.string().oneOf(['NEW_LINE', 'COMMA'])\n    })).min(1, 'Need at least one Extras')\n  });\n  /*\n  extras: [\n              {\n                  title: '',\n                  type: '',\n                  items: [],\n              },\n          ],\n  */\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      extras: extras\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validateOnMount: false,\n    validateOnChange: false,\n    validationSchema: ValidationSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        dispatch(addExtrasData(values.extras));\n        resetForm({\n          title: '',\n          type: '',\n          items: []\n        });\n        setSubmitting(false);\n        closeDrawer();\n      }, 400);\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      setFieldValue,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"pb-10\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"extras\",\n        children: ({\n          insert,\n          remove,\n          push\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [values.extras.length > 0 && values.extras.map((extra, index) => {\n            var _errors$extras$index, _errors$extras$index2;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex align-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-t1-lg font-medium mt-6\",\n                  children: values.extras[index].title ? values.extras[index].title : `Extras Block ${index + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mt-6\",\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  disabled: isSubmitting,\n                  onClick: () => remove(index),\n                  children: \"- Remove Extras\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: `${classes.formControl} mr-10 mt-10`,\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-outlined-label\",\n                  children: \"Type of Extra Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-outlined-label\",\n                  id: \"demo-simple-select-outlined\",\n                  value: values.extras[index].type,\n                  onChange: e => {\n                    setFieldValue(`extras[${index}].type`, e.target.value);\n                  },\n                  label: \"Type of Extra Item\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 'NEW_LINE',\n                    children: \"Every Item in new Line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 'COMMA',\n                    children: \"Every Item in the same line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: `extras.${index}.title`,\n                  className: \"mt-6\",\n                  rows: 1,\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  label: 'Enter Title',\n                  value: values.extras[index].title,\n                  error: !!(errors.extras && (_errors$extras$index = errors.extras[index]) !== null && _errors$extras$index !== void 0 && _errors$extras$index.title),\n                  helperText: errors.extras && ((_errors$extras$index2 = errors.extras[index]) === null || _errors$extras$index2 === void 0 ? void 0 : _errors$extras$index2.title)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 49\n                }, this), values.extras[index].type === 'NEW_LINE' && /*#__PURE__*/_jsxDEV(ChipInput, {\n                  label: \"Items\",\n                  fullWidth: true,\n                  className: \"mt-6 mr-10\",\n                  placeholder: \"Enter items and hit ENTER\",\n                  allowDuplicates: false,\n                  alwaysShowPlaceholder: true,\n                  value: values.extras[index].items,\n                  onAdd: chip => {\n                    setFieldValue(`extras[index].items`, values.extras[index].items.push(chip));\n                  },\n                  onDelete: (chip, indexChip) => {\n                    const items = values.extras[index].items.filter((_, i) => {\n                      return i !== indexChip;\n                    });\n                    setFieldValue(`extras[${index}].items`, items);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 53\n                }, this), values.extras[index].type === 'COMMA' && /*#__PURE__*/_jsxDEV(ChipInput, {\n                  label: \"Items\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  className: \"mt-4 mr-10\",\n                  placeholder: \"Enter items and hit ENTER\",\n                  allowDuplicates: false,\n                  alwaysShowPlaceholder: true,\n                  value: values.extras[index].items,\n                  onAdd: chip => {\n                    setFieldValue(`extras[index].items`, values.extras[index].items.push(chip));\n                  },\n                  onDelete: (chip, indexChip) => {\n                    const items = values.extras[index].items.filter((_, i) => {\n                      return i !== indexChip;\n                    });\n                    setFieldValue(`extras[${index}].items`, items);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                className: \"mt-8 -ml-10 -mr-10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: 'Mui-error',\n            children: errors.extras === 'Need at least one Extras' && errors.extras\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mt-6 mr-10\",\n            variant: \"outlined\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            onClick: () => push({\n              title: '',\n              type: '',\n              items: []\n            }),\n            children: \"+ Add More Extras\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-6\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ExtrasForm;","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/components/forms/ExtrasForm.js"],"names":["Button","Divider","FormControl","FormHelperText","InputLabel","makeStyles","MenuItem","Select","TextField","DeleteIcon","FieldArray","Formik","ChipInput","React","Fragment","useDispatch","useSelector","Yup","addExtrasData","useStyles","theme","formControl","minWidth","selectEmpty","marginTop","spacing","ExtrasForm","closeDrawer","anchor","classes","dispatch","extras","state","resume","data","ValidationSchema","object","shape","array","of","title","string","required","type","oneOf","min","values","setSubmitting","resetForm","setTimeout","items","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","insert","remove","push","length","map","extra","index","e","target","value","chip","indexChip","filter","_","i","shrink"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Divider,\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { FieldArray, Formik } from 'formik';\nimport ChipInput from 'material-ui-chip-input';\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { addExtrasData } from '../../redux/actions/resumeActions';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst ExtrasForm = ({ closeDrawer, anchor }) => {\n    const classes = useStyles();\n    // Dispatch\n    const dispatch = useDispatch();\n\n    // Get personalData State from globalState\n    let extras = useSelector((state) => state.resume.data.extras);\n\n    // Validation Schema for Extras form\n    const ValidationSchema = Yup.object().shape({\n        extras: Yup.array()\n            .of(\n                Yup.object().shape({\n                    title: Yup.string().required('Title of the Extra is must.'),\n                    type: Yup.string().oneOf(['NEW_LINE', 'COMMA']),\n                })\n            )\n            .min(1, 'Need at least one Extras'),\n    });\n \n    /*\n    extras: [\n                {\n                    title: '',\n                    type: '',\n                    items: [],\n                },\n            ],\n    */\n\n    return (\n        <Formik\n            initialValues={{\n                extras: extras\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validateOnMount={false}\n            validateOnChange={false}\n            validationSchema={ValidationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n                setTimeout(() => {\n                    dispatch(addExtrasData(values.extras));\n                    resetForm({\n                        title: '',\n                        type: '',\n                        items: [],\n                    });\n                    setSubmitting(false);\n                    closeDrawer();\n                }, 400);\n            }}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue,\n                isSubmitting,\n            }) => (\n                <form className='pb-10' onSubmit={handleSubmit}>\n                    <FieldArray name='extras'>\n                        {({ insert, remove, push }) => (\n                            <div>\n                                {values.extras.length > 0 &&\n                                    values.extras.map((extra, index) => (\n                                        <div className='' key={index}>\n                                            <div className='flex align-center justify-between'>\n                                                <h3 className='text-t1-lg font-medium mt-6'>\n                                                    {values.extras[index].title ? values.extras[index].title : `Extras Block ${index+1}` }\n                                                </h3>\n\n                                                <Button\n                                                    className='mt-6'\n                                                    variant='outlined'\n                                                    color='primary'\n                                                    disabled={isSubmitting}\n                                                    onClick={() =>\n                                                        remove(index)\n                                                    }\n                                                >\n                                                    - Remove Extras\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <DeleteIcon fontSize='small' /> */}\n                                                </Button>\n                                            </div>\n                                            <FormControl\n                                                variant='outlined'\n                                                className={`${classes.formControl} mr-10 mt-10`}\n                                                fullWidth\n                                            >\n                                                <InputLabel id='demo-simple-select-outlined-label'>\n                                                    Type of Extra Item\n\t\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\n                                                <Select\n                                                    labelId='demo-simple-select-outlined-label'\n                                                    id='demo-simple-select-outlined'\n                                                    value={\n                                                        values.extras[index]\n                                                            .type\n                                                    }\n                                                    onChange={(e) => {\n                                                        setFieldValue(\n                                                            `extras[${index}].type`,\n                                                            e.target.value\n                                                        );\n                                                    }}\n                                                    label='Type of Extra Item'\n                                                >\n                                                    <MenuItem value=''>\n                                                        <em>None</em>\n                                                    </MenuItem>\n                                                    <MenuItem\n                                                        value={'NEW_LINE'}\n                                                    >\n                                                        Every Item in new Line\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n                                                    <MenuItem value={'COMMA'}>\n                                                        Every Item in the same\n                                                        line\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n                                                </Select>\n                                                <TextField\n                                                    id={`extras.${index}.title`}\n                                                    className='mt-6'\n                                                    rows={1}\n                                                    variant='outlined'\n                                                    fullWidth\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    label={'Enter Title'}\n                                                    value={values.extras[index].title}\n                                                    error={\n                                                        !!(\n                                                            errors.extras &&\n                                                            errors.extras[\n                                                                index\n                                                            ]?.title\n                                                        )\n                                                    }\n                                                    helperText={\n                                                        errors.extras &&\n                                                        errors.extras[index]\n                                                            ?.title\n                                                    }\n                                                />\n                                                {values.extras[index].type === 'NEW_LINE' && (\n                                                    <ChipInput\n                                                        label='Items'\n                                                        fullWidth\n                                                        className='mt-6 mr-10'\n                                                        placeholder='Enter items and hit ENTER'\n                                                        allowDuplicates={false}\n                                                        alwaysShowPlaceholder={true}\n                                                        value={values.extras[index].items}\n                                                        onAdd={(chip) => {\n                                                            setFieldValue(`extras[index].items`, values.extras[index].items.push(chip))\n                                                        }}\n                                                        onDelete={(chip, indexChip) => {\n                                                            const items = values.extras[index].items.filter((_,i) => {\n                                                                return i !== indexChip\n                                                            })\n                                                            setFieldValue(`extras[${index}].items`, items)\n                                                        }}\n                                                    />\n                                                )}\n                                                {values.extras[index].type === 'COMMA' && (\n                                                    <ChipInput\n                                                        label='Items'\n                                                        InputLabelProps={{shrink: true}}\n                                                        fullWidth\n                                                        className='mt-4 mr-10'\n                                                        placeholder='Enter items and hit ENTER'\n                                                        allowDuplicates={false}\n                                                        alwaysShowPlaceholder={true}\n                                                        value={values.extras[index].items}\n                                                        onAdd={(chip) => {\n                                                            setFieldValue(`extras[index].items`, values.extras[index].items.push(chip))\n                                                        }}\n                                                        onDelete={(chip, indexChip) => {\n                                                            const items = values.extras[index].items.filter((_,i) => {\n                                                                return i !== indexChip\n                                                            })\n                                                            setFieldValue(`extras[${index}].items`, items)\n                                                        }}\n                                                    />\n                                                )}\n\n                                            </FormControl>\n                                            <Divider className='mt-8 -ml-10 -mr-10' />\n                                        </div>\n                                    ))}\n                                <FormHelperText className={'Mui-error'}>\n                                    {errors.extras ===\n                                        'Need at least one Extras' &&\n                                        errors.extras}\n                                </FormHelperText>\n                                <Button\n                                    className='mt-6 mr-10'\n                                    variant='outlined'\n                                    color='primary'\n                                    disabled={isSubmitting}\n                                    onClick={() =>\n                                        push({\n                                            title: '',\n                                            type: '',\n                                            items: [],\n                                        })\n                                    }\n                                >\n                                    + Add More Extras\n\t\t\t\t\t\t\t\t</Button>\n                            </div>\n                        )}\n                    </FieldArray>\n\n                    <Button\n                        className='mt-6'\n                        variant='contained'\n                        color='primary'\n                        type='submit'\n                        disabled={isSubmitting}\n                    >\n                        Submit\n\t\t\t\t\t</Button>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default ExtrasForm;\n"]},"metadata":{},"sourceType":"module"}