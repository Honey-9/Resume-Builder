{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/honey/Documents/Resume builder/components/forms/UploadPhoto.js\";\nimport { Button } from '@material-ui/core';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { useDispatch } from 'react-redux';\nimport { addPhoto } from '../../redux/actions/resumeActions';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'; // import Cropper from \"react-cropper\";\n\nconst UploadPhoto = ({\n  closeDrawer\n}) => {\n  var _completedCrop$width, _completedCrop$height;\n\n  const dispatch = useDispatch();\n\n  function generateDownload(canvas, crop) {\n    if (!crop || !canvas) {\n      return;\n    }\n\n    canvas.toBlob(blob => {\n      // const previewUrl = window.URL.createObjectURL(blob);\n      const previewUrl = URL.createObjectURL(blob);\n      dispatch(addPhoto({\n        src: previewUrl\n      }));\n      const anchor = document.createElement('a');\n      anchor.download = 'cropPreview.png';\n      anchor.href = URL.createObjectURL(blob); // anchor.click();\n\n      closeDrawer(); // window.URL.revokeObjectURL(previewUrl);\n    }, 'image/png', 1);\n  }\n\n  const {\n    0: upImg,\n    1: setUpImg\n  } = useState();\n  const imgRef = useRef(null);\n  const uploadRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const {\n    0: crop,\n    1: setCrop\n  } = useState({\n    unit: 'px',\n    width: 300,\n    height: 300,\n    aspect: 1 / 1\n  });\n  const {\n    0: completedCrop,\n    1: setCompletedCrop\n  } = useState(null);\n\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height); // ctx.drawImage(\n    // \timage,\n    // \t0,\n    // \t0,\n    // \timage.width,\n    // \timage.height,\n    // \t0,\n    // \t0,\n    // \tcanvas.width,\n    // \tcanvas.height\n    // );\n  }, [completedCrop]);\n\n  const onUpload = () => {\n    uploadRef.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-10 w-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"px-4 py-2 mr-4\",\n      onClick: () => closeDrawer(),\n      color: \"default\",\n      variant: \"text\",\n      children: [' ', /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ml-2 capitalize\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: uploadRef,\n        type: \"file\",\n        hidden: true,\n        accept: \"image/*\",\n        onChange: onSelectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onUpload,\n        variant: \"outlined\",\n        type: \"button\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ReactCrop // keepSelection\n    , {\n      circularCrop: true,\n      imageStyle: {\n        objectFit: 'contain'\n      },\n      style: {// height: 500,\n      },\n      ruleOfThirds: true,\n      className: \"ReactCrop-opt\",\n      src: upImg,\n      onImageLoaded: onLoad,\n      crop: crop,\n      onChange: c => setCrop(c),\n      onComplete: c => setCompletedCrop(c)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"my-6 text-xl font-semibold\",\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: previewCanvasRef // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n        ,\n        style: {\n          width: Math.round((_completedCrop$width = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.width) !== null && _completedCrop$width !== void 0 ? _completedCrop$width : 0),\n          height: Math.round((_completedCrop$height = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.height) !== null && _completedCrop$height !== void 0 ? _completedCrop$height : 0)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      type: \"button\",\n      disabled: !(completedCrop !== null && completedCrop !== void 0 && completedCrop.width) || !(completedCrop !== null && completedCrop !== void 0 && completedCrop.height),\n      onClick: () => generateDownload(previewCanvasRef.current, completedCrop),\n      children: \"Update Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this);\n};\n\nexport default UploadPhoto;","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/components/forms/UploadPhoto.js"],"names":["Button","React","useState","useCallback","useRef","useEffect","ReactCrop","useDispatch","addPhoto","ArrowBackIcon","UploadPhoto","closeDrawer","dispatch","generateDownload","canvas","crop","toBlob","blob","previewUrl","URL","createObjectURL","src","anchor","document","createElement","download","href","upImg","setUpImg","imgRef","uploadRef","previewCanvasRef","setCrop","unit","width","height","aspect","completedCrop","setCompletedCrop","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","onLoad","img","current","image","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","onUpload","click","objectFit","c","Math","round"],"mappings":"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","sourcesContent":["import { Button } from '@material-ui/core';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { useDispatch } from 'react-redux';\nimport { addPhoto } from '../../redux/actions/resumeActions';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\n// import Cropper from \"react-cropper\";\n\nconst UploadPhoto = ({ closeDrawer }) => {\n\tconst dispatch = useDispatch();\n\tfunction generateDownload(canvas, crop) {\n\t\tif (!crop || !canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.toBlob(\n\t\t\t(blob) => {\n\t\t\t\t// const previewUrl = window.URL.createObjectURL(blob);\n\t\t\t\tconst previewUrl = URL.createObjectURL(blob);\n\t\t\t\tdispatch(\n\t\t\t\t\taddPhoto({\n\t\t\t\t\t\tsrc: previewUrl,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tconst anchor = document.createElement('a');\n\t\t\t\tanchor.download = 'cropPreview.png';\n\t\t\t\tanchor.href = URL.createObjectURL(blob);\n\t\t\t\t// anchor.click();\n\t\t\t\tcloseDrawer();\n\t\t\t\t// window.URL.revokeObjectURL(previewUrl);\n\t\t\t},\n\t\t\t'image/png',\n\t\t\t1\n\t\t);\n\t}\n\n\tconst [upImg, setUpImg] = useState();\n\tconst imgRef = useRef(null);\n\tconst uploadRef = useRef(null);\n\tconst previewCanvasRef = useRef(null);\n\tconst [crop, setCrop] = useState({\n\t\tunit: 'px',\n\t\twidth: 300,\n\t\theight: 300,\n\t\taspect: 1 / 1,\n\t});\n\tconst [completedCrop, setCompletedCrop] = useState(null);\n\n\tconst onSelectFile = (e) => {\n\t\tif (e.target.files && e.target.files.length > 0) {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.addEventListener('load', () => setUpImg(reader.result));\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t}\n\t};\n\n\tconst onLoad = useCallback((img) => {\n\t\timgRef.current = img;\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst image = imgRef.current;\n\t\tconst canvas = previewCanvasRef.current;\n\t\tconst crop = completedCrop;\n\n\t\tconst scaleX = image.naturalWidth / image.width;\n\t\tconst scaleY = image.naturalHeight / image.height;\n\t\tconst ctx = canvas.getContext('2d');\n\t\tconst pixelRatio = window.devicePixelRatio;\n\n\t\tcanvas.width = crop.width * pixelRatio;\n\t\tcanvas.height = crop.height * pixelRatio;\n\n\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\tctx.imageSmoothingQuality = 'high';\n\n\t\tctx.drawImage(\n\t\t\timage,\n\t\t\tcrop.x * scaleX,\n\t\t\tcrop.y * scaleY,\n\t\t\tcrop.width * scaleX,\n\t\t\tcrop.height * scaleY,\n\t\t\t0,\n\t\t\t0,\n\t\t\tcrop.width,\n\t\t\tcrop.height\n\t\t);\n\t\t// ctx.drawImage(\n\t\t// \timage,\n\t\t// \t0,\n\t\t// \t0,\n\t\t// \timage.width,\n\t\t// \timage.height,\n\t\t// \t0,\n\t\t// \t0,\n\t\t// \tcanvas.width,\n\t\t// \tcanvas.height\n\t\t// );\n\t}, [completedCrop]);\n\n\tconst onUpload = () => {\n\t\tuploadRef.current.click();\n\t};\n\n\treturn (\n\t\t<div className='mb-10 w-screen'>\n\t\t<Button\n\t\tclassName='px-4 py-2 mr-4'\n\t\tonClick={() => closeDrawer()}\n\t\tcolor='default'\n\t\tvariant='text'\n\t\t>\n\t\t{' '}\n\t\t<ArrowBackIcon /><p className='ml-2 capitalize'>Back</p>\n\t</Button>\n\t\t\t<div className='mt-6 mb-6'>\n\t\t\t\t<input\n\t\t\t\t\tref={uploadRef}\n\t\t\t\t\ttype='file'\n\t\t\t\t\thidden\n\t\t\t\t\taccept='image/*'\n\t\t\t\t\tonChange={onSelectFile}\n\t\t\t\t/>\n\t\t\t\t<Button onClick={onUpload} variant='outlined' type='button'>\n\t\t\t\t\tUpload Image\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<ReactCrop\n\t\t\t\t// keepSelection\n                circularCrop\n\t\t\t\timageStyle={{ objectFit: 'contain' }}\n\t\t\t\tstyle={{\n\t\t\t\t\t// height: 500,\n\t\t\t\t}}\n                ruleOfThirds\n\t\t\t\tclassName='ReactCrop-opt'\n\t\t\t\tsrc={upImg}\n\t\t\t\tonImageLoaded={onLoad}\n\t\t\t\tcrop={crop}\n\t\t\t\tonChange={(c) => setCrop(c)}\n\t\t\t\tonComplete={(c) => setCompletedCrop(c)}\n\t\t\t/>\n\t\t\t<div className='mb-8'>\n                <h3 className='my-6 text-xl font-semibold'>Preview</h3>\n\t\t\t\t<canvas\n\t\t\t\t\tref={previewCanvasRef}\n\t\t\t\t\t// Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: Math.round(completedCrop?.width ?? 0),\n\t\t\t\t\t\theight: Math.round(completedCrop?.height ?? 0),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<Button\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='button'\n\t\t\t\tdisabled={!completedCrop?.width || !completedCrop?.height}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tgenerateDownload(previewCanvasRef.current, completedCrop)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\tUpdate Image\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default UploadPhoto;\n"]},"metadata":{},"sourceType":"module"}