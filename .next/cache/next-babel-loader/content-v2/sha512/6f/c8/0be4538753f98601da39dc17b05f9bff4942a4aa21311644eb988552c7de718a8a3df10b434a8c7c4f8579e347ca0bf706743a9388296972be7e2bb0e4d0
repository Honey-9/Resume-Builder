{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/honey/Documents/Resume builder/components/forms/EditSingleExtra.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Divider, TextField } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Formik } from 'formik';\nimport React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { FormControl, FormHelperText, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport ChipInput from 'material-ui-chip-input';\nimport { editSingleExtraData } from '../../redux/actions/resumeActions';\nimport { Fragment } from 'react';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst EditSingleExtra = ({\n  closeDrawer,\n  anchor,\n  extra,\n  setEdit\n}) => {\n  // Dispatch\n  const dispatch = useDispatch(); // Validation Schema for PersonalData form\n\n  const ValidationSchema = Yup.object().shape({\n    title: Yup.string().required('Title of the Extra is must.'),\n    type: Yup.string().oneOf(['NEW_LINE', 'COMMA'])\n  });\n  /* \n                 {\n                     title: '',\n                     type: '',\n                     items: [],\n                 },\n                 \n     */\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: _objectSpread({}, extra),\n    validateOnChange: false,\n    validateOnBlur: false,\n    validateOnMount: false,\n    validationSchema: ValidationSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        dispatch(editSingleExtraData(values));\n        resetForm({\n          title: '',\n          type: '',\n          items: []\n        });\n        setSubmitting(false);\n        closeDrawer(anchor, false);\n        setEdit(true);\n      }, 400);\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      setFieldValue,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"pb-10\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex align-center justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-t1-lg font-medium mt-6\",\n            children: \"Extra Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `title`,\n          className: \"mt-6\",\n          rows: 1,\n          variant: \"outlined\",\n          fullWidth: true,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: 'Enter Title',\n          value: values.title,\n          error: !!errors.title,\n          helperText: errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: `${classes.formControl} mr-10 mt-10`,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"Type of Extra Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            value: values.type,\n            onChange: e => {\n              setFieldValue(`type`, e.target.value);\n            },\n            label: \"Type of Extra Item\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'NEW_LINE',\n              children: \"Every Item in new Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'COMMA',\n              children: \"Every Item in the same line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 8\n          }, this), values.type === 'NEW_LINE' && /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ChipInput // inputValue={value}\n            , {\n              label: \"Items\",\n              fullWidth: true,\n              className: \"mt-6 mr-10\",\n              placeholder: \"Enter items and hit ENTER\",\n              allowDuplicates: false,\n              alwaysShowPlaceholder: true,\n              value: values.items,\n              onAdd: chip => {\n                setFieldValue(`items`, values.items.concat(chip));\n              },\n              onDelete: (chip, indexChip) => {\n                const items = values.items.filter((_, i) => {\n                  return i !== indexChip;\n                });\n                setFieldValue(`items`, items);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this), values.type === 'COMMA' && /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ChipInput, {\n              label: \"Items\",\n              InputLabelProps: {\n                shrink: true\n              },\n              fullWidth: true,\n              className: \"mt-4 mr-10\",\n              placeholder: \"Enter items and hit ENTER\",\n              allowDuplicates: false,\n              alwaysShowPlaceholder: true,\n              value: values.items,\n              onAdd: chip => {\n                setFieldValue(`.items`, values.items.push(chip));\n              },\n              onDelete: (chip, indexChip) => {\n                const items = values.items.filter((_, i) => {\n                  return i !== indexChip;\n                });\n                setFieldValue(`items`, items);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"mt-8 -ml-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-6\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\nexport default EditSingleExtra;","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/components/forms/EditSingleExtra.js"],"names":["Button","Divider","TextField","DeleteIcon","Formik","React","useRef","useDispatch","Yup","FormControl","FormHelperText","InputLabel","makeStyles","MenuItem","Select","ChipInput","editSingleExtraData","Fragment","useStyles","theme","formControl","minWidth","selectEmpty","marginTop","spacing","EditSingleExtra","closeDrawer","anchor","extra","setEdit","dispatch","ValidationSchema","object","shape","title","string","required","type","oneOf","classes","values","setSubmitting","resetForm","setTimeout","items","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","e","target","value","chip","concat","indexChip","filter","_","i","shrink","push"],"mappings":"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","sourcesContent":["import { Button, Divider, TextField } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Formik } from 'formik';\nimport React, {useRef} from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n\tFormControl,\n\tFormHelperText,\n\tInputLabel,\n\tmakeStyles,\n\tMenuItem,\n\tSelect,\n} from '@material-ui/core';\nimport ChipInput from 'material-ui-chip-input';\nimport {editSingleExtraData} from '../../redux/actions/resumeActions';\nimport { Fragment } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tminWidth: 120,\n\t},\n\tselectEmpty: {\n\t\tmarginTop: theme.spacing(2),\n\t},\n}));\n\nconst EditSingleExtra = ({ closeDrawer, anchor, extra, setEdit }) => {\n\t// Dispatch\n\tconst dispatch = useDispatch();\n\n\t// Validation Schema for PersonalData form\n\tconst ValidationSchema = Yup.object().shape({\n\t\ttitle: Yup.string().required('Title of the Extra is must.'),\n\t\ttype: Yup.string().oneOf(['NEW_LINE', 'COMMA']),\n\t});\n\n\t/* \n                {\n                    title: '',\n                    type: '',\n                    items: [],\n                },\n                \n    */\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\t...extra,\n\t\t\t}}\n\t\t\tvalidateOnChange={false}\n\t\t\tvalidateOnBlur={false}\n\t\t\tvalidateOnMount={false}\n\t\t\tvalidationSchema={ValidationSchema}\n\t\t\tonSubmit={(values, { setSubmitting, resetForm }) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdispatch(editSingleExtraData(values));\n\t\t\t\t\tresetForm({\n\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\ttype: '',\n\t\t\t\t\t\titems: [],\n\t\t\t\t\t});\n\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\tcloseDrawer(anchor, false);\n\t\t\t\t\tsetEdit(true);\n\t\t\t\t}, 400);\n\t\t\t}}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\terrors,\n\t\t\t\ttouched,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\thandleSubmit,\n\t\t\t\tsetFieldValue,\n\t\t\t\tisSubmitting,\n\t\t\t}) => (\n\t\t\t\t<form className='pb-10' onSubmit={handleSubmit}>\n\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t<div className='flex align-center justify-between'>\n\t\t\t\t\t\t\t<h3 className='text-t1-lg font-medium mt-6'>\n\t\t\t\t\t\t\t\tExtra Block\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid={`title`}\n\t\t\t\t\t\t\tclassName='mt-6'\n\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tlabel={'Enter Title'}\n\t\t\t\t\t\t\tvalue={values.title}\n\t\t\t\t\t\t\terror={!!errors.title}\n\t\t\t\t\t\t\thelperText={errors.title}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tclassName={`${classes.formControl} mr-10 mt-10`}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\n\t\t\t\t\t\t\t\tType of Extra Item\n\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId='demo-simple-select-outlined-label'\n\t\t\t\t\t\t\t\tid='demo-simple-select-outlined'\n\t\t\t\t\t\t\t\tvalue={values.type}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t`type`,\n\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabel='Type of Extra Item'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=''>\n\t\t\t\t\t\t\t\t\t<em>None</em>\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value={'NEW_LINE'}>\n\t\t\t\t\t\t\t\t\tEvery Item in new Line\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value={'COMMA'}>\n\t\t\t\t\t\t\t\t\tEvery Item in the same line\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t{values.type === 'NEW_LINE' && (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<ChipInput\n\t\t\t\t\t\t\t\t\t// inputValue={value}\n\t\t\t\t\t\t\t\t\tlabel='Items'\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tclassName='mt-6 mr-10'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter items and hit ENTER'\n\t\t\t\t\t\t\t\t\tallowDuplicates={false}\n\t\t\t\t\t\t\t\t\talwaysShowPlaceholder={true}\n\t\t\t\t\t\t\t\t\tvalue={values.items}\n\t\t\t\t\t\t\t\t\tonAdd={(chip) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t`items`,\n\t\t\t\t\t\t\t\t\t\t\tvalues.items.concat(\n\t\t\t\t\t\t\t\t\t\t\t\tchip\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonDelete={(chip, indexChip) => {\n\t\t\t\t\t\t\t\t\t\tconst items = values.items.filter((_, i) => {\n\t\t\t\t\t\t\t\t\t\t\treturn i !== indexChip;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t`items`,\n\t\t\t\t\t\t\t\t\t\t\titems\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\t\t\t\t\t\n\t\t\t\t\t\t\t\t{/* <Button className='mt-4' onClick={() => console.log()} variant='contained' color='primary'>Add</Button> */}\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{values.type === 'COMMA' && (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<ChipInput\n\t\t\t\t\t\t\t\t\tlabel='Items'\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tclassName='mt-4 mr-10'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter items and hit ENTER'\n\t\t\t\t\t\t\t\t\tallowDuplicates={false}\n\t\t\t\t\t\t\t\t\talwaysShowPlaceholder={true}\n\t\t\t\t\t\t\t\t\tvalue={values.items}\n\t\t\t\t\t\t\t\t\tonAdd={(chip) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t`.items`,\n\t\t\t\t\t\t\t\t\t\t\tvalues.items.push(\n\t\t\t\t\t\t\t\t\t\t\t\tchip\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonDelete={(chip, indexChip) => {\n\t\t\t\t\t\t\t\t\t\tconst items = values.items.filter((_, i) => {\n\t\t\t\t\t\t\t\t\t\t\treturn i !== indexChip;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t`items`,\n\t\t\t\t\t\t\t\t\t\t\titems\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <Button className='mt-4' onClick={() => console.log()} variant='contained' color='primary'>Add</Button> */}\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Divider className='mt-8 -ml-10' />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName='mt-6'\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nexport default EditSingleExtra;\n"]},"metadata":{},"sourceType":"module"}