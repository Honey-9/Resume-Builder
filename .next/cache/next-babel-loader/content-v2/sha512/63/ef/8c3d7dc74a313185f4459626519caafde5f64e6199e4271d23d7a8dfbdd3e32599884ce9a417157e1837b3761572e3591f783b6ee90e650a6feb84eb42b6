{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOGIN, LOGOUT } from '../actionTypes/userActionTypes';\nconst initialLoginState = {\n  userLoggedIn: false\n};\nexport const loginReducer = (state = initialLoginState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        return {\n          userLoggedIn: true\n        };\n      }\n\n    case LOGOUT:\n      {\n        return {\n          userLoggedIn: false\n        };\n      }\n\n    default:\n      return _objectSpread({}, initialLoginState);\n  }\n};","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/redux/reducers/userReducer.js"],"names":["LOGIN","LOGOUT","initialLoginState","userLoggedIn","loginReducer","state","action","type"],"mappings":";;;;;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,gCAA9B;AACA,MAAMC,iBAAiB,GAAG;AACzBC,EAAAA,YAAY,EAAE;AADW,CAA1B;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,iBAAT,EAA4BI,MAA5B,KAAuC;AAClE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,KAAL;AAAY;AACX,eAAO;AAAEG,UAAAA,YAAY,EAAE;AAAhB,SAAP;AACA;;AACD,SAAKF,MAAL;AAAa;AACZ,eAAO;AACNE,UAAAA,YAAY,EAAE;AADR,SAAP;AAGA;;AACD;AACC,+BAAYD,iBAAZ;AAVF;AAYA,CAbM","sourcesContent":["import { LOGIN, LOGOUT } from '../actionTypes/userActionTypes';\nconst initialLoginState = {\n\tuserLoggedIn: false,\n};\nexport const loginReducer = (state = initialLoginState, action) => {\n\tswitch (action.type) {\n\t\tcase LOGIN: {\n\t\t\treturn { userLoggedIn: true };\n\t\t}\n\t\tcase LOGOUT: {\n\t\t\treturn {\n\t\t\t\tuserLoggedIn: false,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn { ...initialLoginState };\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}