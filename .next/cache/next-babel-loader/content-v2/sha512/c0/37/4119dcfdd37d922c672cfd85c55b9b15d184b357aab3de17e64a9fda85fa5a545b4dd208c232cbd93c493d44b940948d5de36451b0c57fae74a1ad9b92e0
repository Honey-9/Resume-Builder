{"ast":null,"code":"import { ADD_EDUCATION_DATA, ADD_EXPERIENCE_DATA, ADD_EXTRAS_DATA, ADD_PERSONAL_DATA, ADD_PHOTO_DATA, ADD_SAMPLE_EXPERIENCE_DATA, DELETE_SINGLE_EXPERIENCE_DATA, EDIT_SINGLE_EXPERIENCE_DATA, ADD_SAMPLE_EDUCATION_DATA, EDIT_SINGLE_EDUCATION_DATA, DELETE_SINGLE_EDUCATION_DATA, ADD_SAMPLE_EXTRA_DATA, EDIT_SINGLE_EXTRA_DATA, DELETE_SINGLE_EXTRA_DATA } from '../actionTypes/resumeActionTypes';\nexport const addPersonalData = personalData => dispatch => {\n  dispatch({\n    type: ADD_PERSONAL_DATA,\n    payload: personalData\n  });\n};\nexport const addExperienceData = experiences => dispatch => {\n  dispatch({\n    type: ADD_EXPERIENCE_DATA,\n    payload: experiences\n  });\n};\nexport const addSampleExperienceData = experience => dispatch => {\n  dispatch({\n    type: ADD_SAMPLE_EXPERIENCE_DATA,\n    payload: experience\n  });\n};\nexport const editSingleExperienceData = experience => (dispatch, getState) => {\n  const state = getState();\n  const experiences = state.resume.data.experiences;\n  const newExperiences = experiences.map(exp => exp.id === experience.id ? experience : exp);\n  dispatch({\n    type: EDIT_SINGLE_EXPERIENCE_DATA,\n    payload: newExperiences\n  });\n};\nexport const deleteSingleExperienceData = id => (dispatch, getState) => {\n  const state = getState();\n  const experiences = state.resume.data.experiences;\n  const newExperiences = experiences.filter(exp => exp.id !== id);\n  dispatch({\n    type: DELETE_SINGLE_EXPERIENCE_DATA,\n    payload: newExperiences\n  });\n};\nexport const addSampleEducationData = education => dispatch => {\n  dispatch({\n    type: ADD_SAMPLE_EDUCATION_DATA,\n    payload: education\n  });\n};\nexport const editSingleEducationData = education => (dispatch, getState) => {\n  const state = getState();\n  const educations = state.resume.data.education;\n  const newEducation = educations.map(edu => edu.id === education.id ? education : edu);\n  dispatch({\n    type: EDIT_SINGLE_EDUCATION_DATA,\n    payload: newEducation\n  });\n};\nexport const deleteSingleEducationData = id => (dispatch, getState) => {\n  const state = getState();\n  const education = state.resume.data.education;\n  const newEducation = education.filter(edu => edu.id !== id);\n  dispatch({\n    type: DELETE_SINGLE_EDUCATION_DATA,\n    payload: newEducation\n  });\n};\nexport const addEducationData = education => dispatch => {\n  dispatch({\n    type: ADD_EDUCATION_DATA,\n    payload: education\n  });\n};\nexport const addSampleExtraData = extra => dispatch => {\n  dispatch({\n    type: ADD_SAMPLE_EXTRA_DATA,\n    payload: extra\n  });\n};\nexport const editSingleExtraData = extra => (dispatch, getState) => {\n  const state = getState();\n  const extras = state.resume.data.extras;\n  const newExtras = extras.map(ext => ext.id === extra.id ? extra : ext);\n  dispatch({\n    type: EDIT_SINGLE_EXTRA_DATA,\n    payload: newExtras\n  });\n};\nexport const deleteSingleExtraData = id => (dispatch, getState) => {\n  const state = getState();\n  const extras = state.resume.data.extras;\n  const newExtras = extras.filter(ext => ext.id !== id);\n  dispatch({\n    type: DELETE_SINGLE_EXTRA_DATA,\n    payload: newExtras\n  });\n};\nexport const addExtrasData = extras => dispatch => {\n  dispatch({\n    type: ADD_EXTRAS_DATA,\n    payload: extras\n  });\n};\nexport const addPhoto = photo => dispatch => {\n  dispatch({\n    type: ADD_PHOTO_DATA,\n    payload: photo\n  });\n};","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/redux/actions/resumeActions.js"],"names":["ADD_EDUCATION_DATA","ADD_EXPERIENCE_DATA","ADD_EXTRAS_DATA","ADD_PERSONAL_DATA","ADD_PHOTO_DATA","ADD_SAMPLE_EXPERIENCE_DATA","DELETE_SINGLE_EXPERIENCE_DATA","EDIT_SINGLE_EXPERIENCE_DATA","ADD_SAMPLE_EDUCATION_DATA","EDIT_SINGLE_EDUCATION_DATA","DELETE_SINGLE_EDUCATION_DATA","ADD_SAMPLE_EXTRA_DATA","EDIT_SINGLE_EXTRA_DATA","DELETE_SINGLE_EXTRA_DATA","addPersonalData","personalData","dispatch","type","payload","addExperienceData","experiences","addSampleExperienceData","experience","editSingleExperienceData","getState","state","resume","data","newExperiences","map","exp","id","deleteSingleExperienceData","filter","addSampleEducationData","education","editSingleEducationData","educations","newEducation","edu","deleteSingleEducationData","addEducationData","addSampleExtraData","extra","editSingleExtraData","extras","newExtras","ext","deleteSingleExtraData","addExtrasData","addPhoto","photo"],"mappings":"AAAA,SACCA,kBADD,EAECC,mBAFD,EAGCC,eAHD,EAICC,iBAJD,EAKCC,cALD,EAMCC,0BAND,EAOCC,6BAPD,EAQCC,2BARD,EASCC,yBATD,EAUCC,0BAVD,EAWCC,4BAXD,EAYCC,qBAZD,EAaCC,sBAbD,EAcCC,wBAdD,QAeO,kCAfP;AAiBA,OAAO,MAAMC,eAAe,GAAIC,YAAD,IAAmBC,QAAD,IAAc;AAC9DA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEd,iBADE;AAERe,IAAAA,OAAO,EAAEH;AAFD,GAAD,CAAR;AAIA,CALM;AAOP,OAAO,MAAMI,iBAAiB,GAAIC,WAAD,IAAkBJ,QAAD,IAAc;AAC/DA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEhB,mBADE;AAERiB,IAAAA,OAAO,EAAEE;AAFD,GAAD,CAAR;AAIA,CALM;AAOP,OAAO,MAAMC,uBAAuB,GAAIC,UAAD,IAAiBN,QAAD,IAAc;AACpEA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEZ,0BADE;AAERa,IAAAA,OAAO,EAAEI;AAFD,GAAD,CAAR;AAIA,CALM;AAOP,OAAO,MAAMC,wBAAwB,GAAID,UAAD,IAAgB,CAACN,QAAD,EAAWQ,QAAX,KAAwB;AAC/E,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMJ,WAAW,GAAGK,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBP,WAAtC;AACA,QAAMQ,cAAc,GAAGR,WAAW,CAACS,GAAZ,CAAgBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWT,UAAU,CAACS,EAAtB,GAA2BT,UAA3B,GAAwCQ,GAA/D,CAAvB;AACAd,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEV,2BADE;AAERW,IAAAA,OAAO,EAAEU;AAFD,GAAD,CAAR;AAIA,CARM;AAWP,OAAO,MAAMI,0BAA0B,GAAID,EAAD,IAAQ,CAACf,QAAD,EAAWQ,QAAX,KAAwB;AACzE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMJ,WAAW,GAAGK,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBP,WAAtC;AACA,QAAMQ,cAAc,GAAGR,WAAW,CAACa,MAAZ,CAAmBH,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWA,EAArC,CAAvB;AACAf,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEX,6BADE;AAERY,IAAAA,OAAO,EAAEU;AAFD,GAAD,CAAR;AAIA,CARM;AAUP,OAAO,MAAMM,sBAAsB,GAAIC,SAAD,IAAgBnB,QAAD,IAAc;AAClEA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAET,yBADE;AAERU,IAAAA,OAAO,EAAEiB;AAFD,GAAD,CAAR;AAIA,CALM;AAOP,OAAO,MAAMC,uBAAuB,GAAID,SAAD,IAAe,CAACnB,QAAD,EAAWQ,QAAX,KAAwB;AAC7E,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMa,UAAU,GAAGZ,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBQ,SAArC;AACA,QAAMG,YAAY,GAAGD,UAAU,CAACR,GAAX,CAAeU,GAAG,IAAIA,GAAG,CAACR,EAAJ,KAAWI,SAAS,CAACJ,EAArB,GAA0BI,SAA1B,GAAsCI,GAA5D,CAArB;AACAvB,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAER,0BADE;AAERS,IAAAA,OAAO,EAAEoB;AAFD,GAAD,CAAR;AAIA,CARM;AAWP,OAAO,MAAME,yBAAyB,GAAIT,EAAD,IAAQ,CAACf,QAAD,EAAWQ,QAAX,KAAwB;AACxE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMW,SAAS,GAAGV,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBQ,SAApC;AACA,QAAMG,YAAY,GAAGH,SAAS,CAACF,MAAV,CAAiBM,GAAG,IAAIA,GAAG,CAACR,EAAJ,KAAWA,EAAnC,CAArB;AACAf,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEP,4BADE;AAERQ,IAAAA,OAAO,EAAEoB;AAFD,GAAD,CAAR;AAIA,CARM;AAUP,OAAO,MAAMG,gBAAgB,GAAIN,SAAD,IAAgBnB,QAAD,IAAc;AAC5DA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEjB,kBADE;AAERkB,IAAAA,OAAO,EAAEiB;AAFD,GAAD,CAAR;AAIA,CALM;AAOP,OAAO,MAAMO,kBAAkB,GAAIC,KAAD,IAAY3B,QAAD,IAAc;AAC1DA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEN,qBADE;AAERO,IAAAA,OAAO,EAAEyB;AAFD,GAAD,CAAR;AAIA,CALM;AAOP,OAAO,MAAMC,mBAAmB,GAAID,KAAD,IAAW,CAAC3B,QAAD,EAAWQ,QAAX,KAAwB;AACrE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMqB,MAAM,GAAGpB,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBkB,MAAjC;AACA,QAAMC,SAAS,GAAGD,MAAM,CAAChB,GAAP,CAAWkB,GAAG,IAAIA,GAAG,CAAChB,EAAJ,KAAWY,KAAK,CAACZ,EAAjB,GAAsBY,KAAtB,GAA8BI,GAAhD,CAAlB;AACA/B,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEL,sBADE;AAERM,IAAAA,OAAO,EAAE4B;AAFD,GAAD,CAAR;AAIA,CARM;AAWP,OAAO,MAAME,qBAAqB,GAAIjB,EAAD,IAAQ,CAACf,QAAD,EAAWQ,QAAX,KAAwB;AACpE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMqB,MAAM,GAAGpB,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBkB,MAAjC;AACA,QAAMC,SAAS,GAAGD,MAAM,CAACZ,MAAP,CAAcc,GAAG,IAAIA,GAAG,CAAChB,EAAJ,KAAWA,EAAhC,CAAlB;AACAf,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEJ,wBADE;AAERK,IAAAA,OAAO,EAAE4B;AAFD,GAAD,CAAR;AAIA,CARM;AAUP,OAAO,MAAMG,aAAa,GAAIJ,MAAD,IAAa7B,QAAD,IAAc;AAEtDA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEf,eADE;AAERgB,IAAAA,OAAO,EAAE2B;AAFD,GAAD,CAAR;AAIA,CANM;AASP,OAAO,MAAMK,QAAQ,GAAIC,KAAD,IAAYnC,QAAD,IAAc;AAEhDA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEb,cADE;AAERc,IAAAA,OAAO,EAAEiC;AAFD,GAAD,CAAR;AAIA,CANM","sourcesContent":["import {\n\tADD_EDUCATION_DATA,\n\tADD_EXPERIENCE_DATA,\n\tADD_EXTRAS_DATA,\n\tADD_PERSONAL_DATA,\n\tADD_PHOTO_DATA,\n\tADD_SAMPLE_EXPERIENCE_DATA,\n\tDELETE_SINGLE_EXPERIENCE_DATA,\n\tEDIT_SINGLE_EXPERIENCE_DATA,\n\tADD_SAMPLE_EDUCATION_DATA,\n\tEDIT_SINGLE_EDUCATION_DATA,\n\tDELETE_SINGLE_EDUCATION_DATA,\n\tADD_SAMPLE_EXTRA_DATA,\n\tEDIT_SINGLE_EXTRA_DATA,\n\tDELETE_SINGLE_EXTRA_DATA\n} from '../actionTypes/resumeActionTypes';\n\nexport const addPersonalData = (personalData) => (dispatch) => {\n\tdispatch({\n\t\ttype: ADD_PERSONAL_DATA,\n\t\tpayload: personalData,\n\t});\n};\n\nexport const addExperienceData = (experiences) => (dispatch) => {\n\tdispatch({\n\t\ttype: ADD_EXPERIENCE_DATA,\n\t\tpayload: experiences,\n\t});\n};\n\nexport const addSampleExperienceData = (experience) => (dispatch) => {\n\tdispatch({\n\t\ttype: ADD_SAMPLE_EXPERIENCE_DATA,\n\t\tpayload: experience,\n\t});\n};\n\nexport const editSingleExperienceData = (experience) => (dispatch, getState) => {\n\tconst state = getState();\n\tconst experiences = state.resume.data.experiences;\n\tconst newExperiences = experiences.map(exp => exp.id === experience.id ? experience : exp)\n\tdispatch({\n\t\ttype: EDIT_SINGLE_EXPERIENCE_DATA,\n\t\tpayload: newExperiences,\n\t});\n};\n\n\nexport const deleteSingleExperienceData = (id) => (dispatch, getState) => {\n\tconst state = getState();\n\tconst experiences = state.resume.data.experiences;\n\tconst newExperiences = experiences.filter(exp => exp.id !== id)\n\tdispatch({\n\t\ttype: DELETE_SINGLE_EXPERIENCE_DATA,\n\t\tpayload: newExperiences,\n\t});\n};\n\nexport const addSampleEducationData = (education) => (dispatch) => {\n\tdispatch({\n\t\ttype: ADD_SAMPLE_EDUCATION_DATA,\n\t\tpayload: education,\n\t});\n};\n\nexport const editSingleEducationData = (education) => (dispatch, getState) => {\n\tconst state = getState();\n\tconst educations = state.resume.data.education;\n\tconst newEducation = educations.map(edu => edu.id === education.id ? education : edu)\n\tdispatch({\n\t\ttype: EDIT_SINGLE_EDUCATION_DATA,\n\t\tpayload: newEducation,\n\t});\n};\n\n\nexport const deleteSingleEducationData = (id) => (dispatch, getState) => {\n\tconst state = getState();\n\tconst education = state.resume.data.education;\n\tconst newEducation = education.filter(edu => edu.id !== id)\n\tdispatch({\n\t\ttype: DELETE_SINGLE_EDUCATION_DATA,\n\t\tpayload: newEducation,\n\t});\n};\n\nexport const addEducationData = (education) => (dispatch) => {\n\tdispatch({\n\t\ttype: ADD_EDUCATION_DATA,\n\t\tpayload: education,\n\t});\n};\n\nexport const addSampleExtraData = (extra) => (dispatch) => {\n\tdispatch({\n\t\ttype: ADD_SAMPLE_EXTRA_DATA,\n\t\tpayload: extra,\n\t});\n};\n\nexport const editSingleExtraData = (extra) => (dispatch, getState) => {\n\tconst state = getState();\n\tconst extras = state.resume.data.extras;\n\tconst newExtras = extras.map(ext => ext.id === extra.id ? extra : ext)\n\tdispatch({\n\t\ttype: EDIT_SINGLE_EXTRA_DATA,\n\t\tpayload: newExtras,\n\t});\n};\n\n\nexport const deleteSingleExtraData = (id) => (dispatch, getState) => {\n\tconst state = getState();\n\tconst extras = state.resume.data.extras;\n\tconst newExtras = extras.filter(ext => ext.id !== id)\n\tdispatch({\n\t\ttype: DELETE_SINGLE_EXTRA_DATA,\n\t\tpayload: newExtras,\n\t});\n};\n\nexport const addExtrasData = (extras) => (dispatch) => {\n\n\tdispatch({\n\t\ttype: ADD_EXTRAS_DATA,\n\t\tpayload: extras,\n\t});\n};\n\n\nexport const addPhoto = (photo) => (dispatch) => {\n\n\tdispatch({\n\t\ttype: ADD_PHOTO_DATA,\n\t\tpayload: photo,\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}