{"ast":null,"code":"import _defineProperty from \"/home/honey/Documents/Resume builder/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/honey/Documents/Resume builder/components/forms/ExtrasForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Divider, FormControl, FormHelperText, InputLabel, makeStyles, MenuItem, Select, TextField } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { FieldArray, Formik } from 'formik';\nimport ChipInput from 'material-ui-chip-input';\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { addExtrasData } from '../../redux/actions/resumeActions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    formControl: {\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  };\n});\n\nvar ExtrasForm = function ExtrasForm(_ref) {\n  _s();\n\n  var _jsxDEV2;\n\n  var closeDrawer = _ref.closeDrawer,\n      anchor = _ref.anchor;\n  var classes = useStyles(); // Dispatch\n\n  var dispatch = useDispatch(); // Get personalData State from globalState\n\n  var extras = useSelector(function (state) {\n    return state.resume.data.extras;\n  }); // Validation Schema for Extras form\n\n  var ValidationSchema = Yup.object().shape({\n    extras: Yup.array().of(Yup.object().shape({\n      title: Yup.string().required('Title of the Extra is must.'),\n      type: Yup.string().oneOf(['NEW_LINE', 'COMMA'])\n    })).min(1, 'Need at least one Extras')\n  });\n  /*\n  extras: [\n              {\n                  title: '',\n                  type: '',\n                  items: [],\n              },\n          ],\n  */\n\n  return /*#__PURE__*/_jsxDEV(Formik, (_jsxDEV2 = {\n    initialValues: {\n      extras: extras\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validateOnMount: false\n  }, _defineProperty(_jsxDEV2, \"validateOnChange\", false), _defineProperty(_jsxDEV2, \"validationSchema\", ValidationSchema), _defineProperty(_jsxDEV2, \"onSubmit\", function onSubmit(values, _ref2) {\n    var setSubmitting = _ref2.setSubmitting,\n        resetForm = _ref2.resetForm;\n    setTimeout(function () {\n      dispatch(addExtrasData(values.extras));\n      resetForm({\n        title: '',\n        type: '',\n        items: []\n      });\n      setSubmitting(false);\n      closeDrawer();\n    }, 400);\n  }), _defineProperty(_jsxDEV2, \"children\", function children(_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        setFieldValue = _ref3.setFieldValue,\n        isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"pb-10\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"extras\",\n        children: function children(_ref4) {\n          var insert = _ref4.insert,\n              remove = _ref4.remove,\n              push = _ref4.push;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [values.extras.length > 0 && values.extras.map(function (extra, index) {\n              var _errors$extras$index, _errors$extras$index2;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex align-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-t1-lg font-medium mt-6\",\n                    children: values.extras[index].title ? values.extras[index].title : \"Extras Block \".concat(index + 1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 49\n                  }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"mt-6\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    disabled: isSubmitting,\n                    onClick: function onClick() {\n                      return remove(index);\n                    },\n                    children: \"- Remove Extras\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 49\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  variant: \"outlined\",\n                  className: \"\".concat(classes.formControl, \" mr-10 mt-10\"),\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-simple-select-outlined-label\",\n                    children: \"Type of Extra Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 49\n                  }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"demo-simple-select-outlined-label\",\n                    id: \"demo-simple-select-outlined\",\n                    value: values.extras[index].type,\n                    onChange: function onChange(e) {\n                      setFieldValue(\"extras[\".concat(index, \"].type\"), e.target.value);\n                    },\n                    label: \"Type of Extra Item\",\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        children: \"None\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 57\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 53\n                    }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'NEW_LINE',\n                      children: \"Every Item in new Line\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 53\n                    }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'COMMA',\n                      children: \"Every Item in the same line\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 53\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 49\n                  }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"extras.\".concat(index, \".title\"),\n                    className: \"mt-6\",\n                    rows: 1,\n                    variant: \"outlined\",\n                    fullWidth: true,\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    label: 'Enter Title',\n                    value: values.extras[index].title,\n                    error: !!(errors.extras && (_errors$extras$index = errors.extras[index]) !== null && _errors$extras$index !== void 0 && _errors$extras$index.title),\n                    helperText: errors.extras && ((_errors$extras$index2 = errors.extras[index]) === null || _errors$extras$index2 === void 0 ? void 0 : _errors$extras$index2.title)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 49\n                  }, _this), values.extras[index].type === 'NEW_LINE' && /*#__PURE__*/_jsxDEV(ChipInput, {\n                    label: \"Items\",\n                    fullWidth: true,\n                    className: \"mt-6 mr-10\",\n                    placeholder: \"Enter items and hit ENTER\",\n                    allowDuplicates: false,\n                    alwaysShowPlaceholder: true,\n                    value: values.extras[index].items,\n                    onAdd: function onAdd(chip) {\n                      setFieldValue(\"extras[index].items\", values.extras[index].items.push(chip));\n                    },\n                    onDelete: function onDelete(chip, indexChip) {\n                      var items = values.extras[index].items.filter(function (_, i) {\n                        return i !== indexChip;\n                      });\n                      setFieldValue(\"extras[\".concat(index, \"].items\"), items);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 53\n                  }, _this), values.extras[index].type === 'COMMA' && /*#__PURE__*/_jsxDEV(ChipInput, {\n                    label: \"Items\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    fullWidth: true,\n                    className: \"mt-4 mr-10\",\n                    placeholder: \"Enter items and hit ENTER\",\n                    allowDuplicates: false,\n                    alwaysShowPlaceholder: true,\n                    value: values.extras[index].items,\n                    onAdd: function onAdd(chip) {\n                      setFieldValue(\"extras[index].items\", values.extras[index].items.push(chip));\n                    },\n                    onDelete: function onDelete(chip, indexChip) {\n                      var items = values.extras[index].items.filter(function (_, i) {\n                        return i !== indexChip;\n                      });\n                      setFieldValue(\"extras[\".concat(index, \"].items\"), items);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 53\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 45\n                }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n                  className: \"mt-8 -ml-10 -mr-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 45\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, _this);\n            }), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: 'Mui-error',\n              children: errors.extras === 'Need at least one Extras' && errors.extras\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mt-6 mr-10\",\n              variant: \"outlined\",\n              color: \"primary\",\n              disabled: isSubmitting,\n              onClick: function onClick() {\n                return push({\n                  title: '',\n                  type: '',\n                  items: []\n                });\n              },\n              children: \"+ Add More Extras\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-6\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, _this);\n  }), _jsxDEV2), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ExtrasForm, \"0cUg7Acv/RAV5aVD4thHgMGMbb4=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = ExtrasForm;\nexport default ExtrasForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExtrasForm\");","map":{"version":3,"sources":["/home/honey/Documents/Resume builder/components/forms/ExtrasForm.js"],"names":["Button","Divider","FormControl","FormHelperText","InputLabel","makeStyles","MenuItem","Select","TextField","DeleteIcon","FieldArray","Formik","ChipInput","React","Fragment","useDispatch","useSelector","Yup","addExtrasData","useStyles","theme","formControl","minWidth","selectEmpty","marginTop","spacing","ExtrasForm","closeDrawer","anchor","classes","dispatch","extras","state","resume","data","ValidationSchema","object","shape","array","of","title","string","required","type","oneOf","min","values","setSubmitting","resetForm","setTimeout","items","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","insert","remove","push","length","map","extra","index","e","target","value","chip","indexChip","filter","_","i","shrink"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Divider,\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { FieldArray, Formik } from 'formik';\nimport ChipInput from 'material-ui-chip-input';\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { addExtrasData } from '../../redux/actions/resumeActions';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst ExtrasForm = ({ closeDrawer, anchor }) => {\n    const classes = useStyles();\n    // Dispatch\n    const dispatch = useDispatch();\n\n    // Get personalData State from globalState\n    let extras = useSelector((state) => state.resume.data.extras);\n\n    // Validation Schema for Extras form\n    const ValidationSchema = Yup.object().shape({\n        extras: Yup.array()\n            .of(\n                Yup.object().shape({\n                    title: Yup.string().required('Title of the Extra is must.'),\n                    type: Yup.string().oneOf(['NEW_LINE', 'COMMA']),\n                })\n            )\n            .min(1, 'Need at least one Extras'),\n    });\n \n    /*\n    extras: [\n                {\n                    title: '',\n                    type: '',\n                    items: [],\n                },\n            ],\n    */\n\n    return (\n        <Formik\n            initialValues={{\n                extras: extras\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validateOnMount={false}\n            validateOnChange={false}\n            validationSchema={ValidationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n                setTimeout(() => {\n                    dispatch(addExtrasData(values.extras));\n                    resetForm({\n                        title: '',\n                        type: '',\n                        items: [],\n                    });\n                    setSubmitting(false);\n                    closeDrawer();\n                }, 400);\n            }}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue,\n                isSubmitting,\n            }) => (\n                <form className='pb-10' onSubmit={handleSubmit}>\n                    <FieldArray name='extras'>\n                        {({ insert, remove, push }) => (\n                            <div>\n                                {values.extras.length > 0 &&\n                                    values.extras.map((extra, index) => (\n                                        <div className='' key={index}>\n                                            <div className='flex align-center justify-between'>\n                                                <h3 className='text-t1-lg font-medium mt-6'>\n                                                    {values.extras[index].title ? values.extras[index].title : `Extras Block ${index+1}` }\n                                                </h3>\n\n                                                <Button\n                                                    className='mt-6'\n                                                    variant='outlined'\n                                                    color='primary'\n                                                    disabled={isSubmitting}\n                                                    onClick={() =>\n                                                        remove(index)\n                                                    }\n                                                >\n                                                    - Remove Extras\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <DeleteIcon fontSize='small' /> */}\n                                                </Button>\n                                            </div>\n                                            <FormControl\n                                                variant='outlined'\n                                                className={`${classes.formControl} mr-10 mt-10`}\n                                                fullWidth\n                                            >\n                                                <InputLabel id='demo-simple-select-outlined-label'>\n                                                    Type of Extra Item\n\t\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\n                                                <Select\n                                                    labelId='demo-simple-select-outlined-label'\n                                                    id='demo-simple-select-outlined'\n                                                    value={\n                                                        values.extras[index]\n                                                            .type\n                                                    }\n                                                    onChange={(e) => {\n                                                        setFieldValue(\n                                                            `extras[${index}].type`,\n                                                            e.target.value\n                                                        );\n                                                    }}\n                                                    label='Type of Extra Item'\n                                                >\n                                                    <MenuItem value=''>\n                                                        <em>None</em>\n                                                    </MenuItem>\n                                                    <MenuItem\n                                                        value={'NEW_LINE'}\n                                                    >\n                                                        Every Item in new Line\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n                                                    <MenuItem value={'COMMA'}>\n                                                        Every Item in the same\n                                                        line\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n                                                </Select>\n                                                <TextField\n                                                    id={`extras.${index}.title`}\n                                                    className='mt-6'\n                                                    rows={1}\n                                                    variant='outlined'\n                                                    fullWidth\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    label={'Enter Title'}\n                                                    value={values.extras[index].title}\n                                                    error={\n                                                        !!(\n                                                            errors.extras &&\n                                                            errors.extras[\n                                                                index\n                                                            ]?.title\n                                                        )\n                                                    }\n                                                    helperText={\n                                                        errors.extras &&\n                                                        errors.extras[index]\n                                                            ?.title\n                                                    }\n                                                />\n                                                {values.extras[index].type === 'NEW_LINE' && (\n                                                    <ChipInput\n                                                        label='Items'\n                                                        fullWidth\n                                                        className='mt-6 mr-10'\n                                                        placeholder='Enter items and hit ENTER'\n                                                        allowDuplicates={false}\n                                                        alwaysShowPlaceholder={true}\n                                                        value={values.extras[index].items}\n                                                        onAdd={(chip) => {\n                                                            setFieldValue(`extras[index].items`, values.extras[index].items.push(chip))\n                                                        }}\n                                                        onDelete={(chip, indexChip) => {\n                                                            const items = values.extras[index].items.filter((_,i) => {\n                                                                return i !== indexChip\n                                                            })\n                                                            setFieldValue(`extras[${index}].items`, items)\n                                                        }}\n                                                    />\n                                                )}\n                                                {values.extras[index].type === 'COMMA' && (\n                                                    <ChipInput\n                                                        label='Items'\n                                                        InputLabelProps={{shrink: true}}\n                                                        fullWidth\n                                                        className='mt-4 mr-10'\n                                                        placeholder='Enter items and hit ENTER'\n                                                        allowDuplicates={false}\n                                                        alwaysShowPlaceholder={true}\n                                                        value={values.extras[index].items}\n                                                        onAdd={(chip) => {\n                                                            setFieldValue(`extras[index].items`, values.extras[index].items.push(chip))\n                                                        }}\n                                                        onDelete={(chip, indexChip) => {\n                                                            const items = values.extras[index].items.filter((_,i) => {\n                                                                return i !== indexChip\n                                                            })\n                                                            setFieldValue(`extras[${index}].items`, items)\n                                                        }}\n                                                    />\n                                                )}\n\n                                            </FormControl>\n                                            <Divider className='mt-8 -ml-10 -mr-10' />\n                                        </div>\n                                    ))}\n                                <FormHelperText className={'Mui-error'}>\n                                    {errors.extras ===\n                                        'Need at least one Extras' &&\n                                        errors.extras}\n                                </FormHelperText>\n                                <Button\n                                    className='mt-6 mr-10'\n                                    variant='outlined'\n                                    color='primary'\n                                    disabled={isSubmitting}\n                                    onClick={() =>\n                                        push({\n                                            title: '',\n                                            type: '',\n                                            items: [],\n                                        })\n                                    }\n                                >\n                                    + Add More Extras\n\t\t\t\t\t\t\t\t</Button>\n                            </div>\n                        )}\n                    </FieldArray>\n\n                    <Button\n                        className='mt-6'\n                        variant='contained'\n                        color='primary'\n                        type='submit'\n                        disabled={isSubmitting}\n                    >\n                        Submit\n\t\t\t\t\t</Button>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default ExtrasForm;\n"]},"metadata":{},"sourceType":"module"}